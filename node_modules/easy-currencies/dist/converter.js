"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var requester_1 = require("./parts/requester");
var config_1 = require("./parts/config");
var chainer_1 = require("./parts/chainer");
exports.Convert = chainer_1.Chainer;
var await_to_js_1 = __importDefault(require("await-to-js"));
/**
 * Regular converter class definition.
 *
 * @export
 * @class Converter
 */
var Converter = /** @class */ (function () {
    /**
     * Creates an instance of Converter and initializes the config.
     * @param {initializationConfig} config - base config
     * @memberof Converter
     */
    function Converter() {
        var _this = this;
        var config = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            config[_i] = arguments[_i];
        }
        /**
         * Conversion function (non chainable).
         *
         * @example
         * let converter = new Converter()
         * let converted = await converter.convert(15,"USD","EUR")
         * console.log(converted);
         *
         * @param {number} amount - amount to be converted
         * @param {string} from - base currency
         * @param {string} to - conversion currency
         * @param {any} rates - conversion rates, if they were pre-fetched
         * @returns {Promise<number>} - converted amount
         */
        this.convert = function (amount, from, to, rates) {
            if (rates === void 0) { rates = undefined; }
            return __awaiter(_this, void 0, void 0, function () {
                var _a, err, data;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            // Returining conversion from provided rates
                            if (typeof rates !== "undefined") {
                                return [2 /*return*/, amount * rates[to]];
                            }
                            return [4 /*yield*/, await_to_js_1.default(this.getRates(from, to, false))];
                        case 1:
                            _a = _b.sent(), err = _a[0], data = _a[1];
                            if (err) {
                                throw err;
                            }
                            // Normalizing resulting rates data
                            return [2 /*return*/, amount * data[to]];
                    }
                });
            });
        };
        /**
         * Rate fetch function
         * @param {string} from - base currency
         * @param {string} to - conversion currency
         * @param {boolean} multiple - determines conversion mode
         * @returns
         */
        this.getRates = function (from, to, multiple) {
            if (multiple === void 0) { multiple = false; }
            return __awaiter(_this, void 0, void 0, function () {
                var provider, _a, err, data;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            provider = this.config.activeProvider();
                            return [4 /*yield*/, await_to_js_1.default(requester_1.fetchRates(provider, {
                                    FROM: from,
                                    TO: to,
                                    multiple: multiple
                                }))];
                        case 1:
                            _a = _b.sent(), err = _a[0], data = _a[1];
                            // error handling:
                            // if the error is not in the registered list of errors (is undefined), then throw.
                            // if the error is in the list, but there are no backup providers, then throw.
                            // if the error is in the list and there is a backup, log the error and continue.
                            if (!err) {
                                return [2 /*return*/, provider.handler(data)];
                            }
                            // unrecognized error
                            if (!err.handled) {
                                throw err.error;
                            }
                            // logging existing error
                            console.error(err.error);
                            if (this.config.providers.length <= 1) {
                                throw err.error;
                            }
                            // removing current provider from active list
                            this.config.remove(provider);
                            // Retrying...
                            return [2 /*return*/, this.getRates(from, to, multiple)];
                    }
                });
            });
        };
        this.config = new (config_1.Config.bind.apply(config_1.Config, [void 0].concat(config)))();
        // Forwarding config adder fucntion
        this.add = this.config.add;
        this.addMultiple = this.config.addMultiple;
        this.remove = this.config.remove;
    }
    Object.defineProperty(Converter.prototype, "providers", {
        /**
         * Getters for active providers
         *
         * @readonly
         * @type {Provider[]}
         * @memberof Converter
         */
        get: function () {
            return this.config.providers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Converter.prototype, "active", {
        get: function () {
            return this.config.providers;
        },
        enumerable: true,
        configurable: true
    });
    return Converter;
}());
exports.Converter = Converter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vbGliL2NvbnZlcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0NBQStDO0FBRS9DLHlDQUE4RDtBQUM5RCwyQ0FBcUQ7QUFBNUMsNEJBQUEsT0FBTyxDQUFXO0FBQzNCLDREQUE4QjtBQUc5Qjs7Ozs7R0FLRztBQUNIO0lBU0U7Ozs7T0FJRztJQUNIO1FBQUEsaUJBT0M7UUFQVyxnQkFBMEQ7YUFBMUQsVUFBMEQsRUFBMUQscUJBQTBELEVBQTFELElBQTBEO1lBQTFELDJCQUEwRDs7UUE0QnRFOzs7Ozs7Ozs7Ozs7O1dBYUc7UUFFSCxZQUFPLEdBQUcsVUFDUixNQUFjLEVBQ2QsSUFBWSxFQUNaLEVBQVUsRUFDVixLQUFzQjtZQUF0QixzQkFBQSxFQUFBLGlCQUFzQjs7Ozs7OzRCQUV0Qiw0Q0FBNEM7NEJBQzVDLElBQUksT0FBTyxLQUFLLEtBQUssV0FBVyxFQUFFO2dDQUNoQyxzQkFBTyxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFDOzZCQUMzQjs0QkFHaUIscUJBQU0scUJBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBQTs7NEJBQXZELEtBQWMsU0FBeUMsRUFBdEQsR0FBRyxRQUFBLEVBQUUsSUFBSSxRQUFBOzRCQUVkLElBQUksR0FBRyxFQUFFO2dDQUNQLE1BQU0sR0FBRyxDQUFDOzZCQUNYOzRCQUVELG1DQUFtQzs0QkFDbkMsc0JBQU8sTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBQzs7OztTQUMxQixDQUFDO1FBRUY7Ozs7OztXQU1HO1FBQ0gsYUFBUSxHQUFHLFVBQ1QsSUFBWSxFQUNaLEVBQVUsRUFDVixRQUF5QjtZQUF6Qix5QkFBQSxFQUFBLGdCQUF5Qjs7Ozs7OzRCQUduQixRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQzs0QkFHNUIscUJBQU0scUJBQUcsQ0FDekIsc0JBQVUsQ0FBQyxRQUFRLEVBQUU7b0NBQ25CLElBQUksRUFBRSxJQUFJO29DQUNWLEVBQUUsRUFBRSxFQUFFO29DQUNOLFFBQVEsRUFBRSxRQUFRO2lDQUNuQixDQUFDLENBQ0gsRUFBQTs7NEJBTkcsS0FBYyxTQU1qQixFQU5JLEdBQUcsUUFBQSxFQUFFLElBQUksUUFBQTs0QkFRZCxrQkFBa0I7NEJBQ2xCLG1GQUFtRjs0QkFDbkYsOEVBQThFOzRCQUM5RSxpRkFBaUY7NEJBQ2pGLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0NBQ1Isc0JBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBQzs2QkFDL0I7NEJBRUQscUJBQXFCOzRCQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRTtnQ0FDaEIsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDOzZCQUNqQjs0QkFFRCx5QkFBeUI7NEJBQ3pCLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDOzRCQUV6QixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7Z0NBQ3JDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQzs2QkFDakI7NEJBRUQsNkNBQTZDOzRCQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQzs0QkFFN0IsY0FBYzs0QkFDZCxzQkFBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUM7Ozs7U0FDMUMsQ0FBQztRQWpIQSxJQUFJLENBQUMsTUFBTSxRQUFPLGVBQU0sWUFBTixlQUFNLGtCQUFJLE1BQU0sS0FBQyxDQUFDO1FBRXBDLG1DQUFtQztRQUNuQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1FBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7UUFDM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNuQyxDQUFDO0lBU0Qsc0JBQUksZ0NBQVM7UUFQYjs7Ozs7O1dBTUc7YUFDSDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDL0IsQ0FBQzs7O09BQUE7SUFDRCxzQkFBSSw2QkFBTTthQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUMvQixDQUFDOzs7T0FBQTtJQThGSCxnQkFBQztBQUFELENBQUMsQUFqSUQsSUFpSUM7QUFqSVksOEJBQVMifQ==